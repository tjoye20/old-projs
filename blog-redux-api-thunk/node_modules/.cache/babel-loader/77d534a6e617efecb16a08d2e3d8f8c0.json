{"ast":null,"code":"import _ from 'lodash';\nimport jsonPlaceholder from '../apis/jsonPlaceholder';\nexport const fetchPostsAndUsers = () => {\n  return async dispatch => {\n    await dispatch(fetchPosts());\n  };\n};\nexport const fetchPosts = () => {\n  return async function (dispatch, getState) {\n    const response = await jsonPlaceholder.get('/posts');\n    dispatch({\n      type: 'FETCH_POSTS',\n      payload: response.data\n    });\n  };\n};\n/*\nalternative ES6 syntax for the above\n\nexport const fetchPosts = () => async dispatch => {\n  const response = await jsonPlaceholder.get('/posts');\n\n  dispatch({ type: 'FETCH_POSTS', payload: response})\n};\n\n*/\n// export const fetchUser = (userId) => {\n//   return async function(dispatch) {\n//     const response = await jsonPlaceholder.get(`/users/${userId}`)\n//     dispatch({\n//       type: 'FETCH_POST_USER',\n//       payload: response.data\n//     });\n//   }\n// }\n//memoized version\n//id => dispatch => means we have a function/id that calls\n//another function/dispatch, that returns _fetchUser\n// export const fetchUser = id => dispatch => {\n//   _fetchUser(id, dispatch);\n// }\n\nexport const fetchUser = (id, dispatch) => {\n  return dispatch => {\n    _fetchUser(id, dispatch);\n  };\n};\n\nconst _fetchUser = _.memoize(async (id, dispatch) => {\n  const response = await jsonPlaceholder.get(`/users/${id}`);\n  dispatch({\n    type: 'FETCH_POST_USER',\n    payload: response.data\n  });\n});","map":{"version":3,"sources":["/Users/toluoyeniyi/Desktop/react-js/blog-redux-api-thunk/src/actions/index.js"],"names":["_","jsonPlaceholder","fetchPostsAndUsers","dispatch","fetchPosts","getState","response","get","type","payload","data","fetchUser","id","_fetchUser","memoize"],"mappings":"AAAA,OAAOA,CAAP,MAAc,QAAd;AAEA,OAAOC,eAAP,MAA4B,yBAA5B;AAEA,OAAO,MAAMC,kBAAkB,GAAG,MAAM;AACtC,SAAO,MAAOC,QAAP,IAAoB;AACzB,UAAMA,QAAQ,CAACC,UAAU,EAAX,CAAd;AACD,GAFD;AAGD,CAJM;AAMP,OAAO,MAAMA,UAAU,GAAG,MAAM;AAC9B,SAAO,gBAAeD,QAAf,EAAyBE,QAAzB,EAAmC;AACxC,UAAMC,QAAQ,GAAG,MAAML,eAAe,CAACM,GAAhB,CAAoB,QAApB,CAAvB;AAEAJ,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAE,aADC;AAEPC,MAAAA,OAAO,EAAEH,QAAQ,CAACI;AAFX,KAAD,CAAR;AAID,GAPD;AAQD,CATM;AAYP;;;;;;;;;;AAWA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAO,MAAMC,SAAS,GAAG,CAACC,EAAD,EAAKT,QAAL,KAAkB;AACzC,SAAQA,QAAD,IAAc;AAClBU,IAAAA,UAAU,CAACD,EAAD,EAAKT,QAAL,CAAV;AACF,GAFD;AAGD,CAJM;;AAMP,MAAMU,UAAU,GAAGb,CAAC,CAACc,OAAF,CAAU,OAAOF,EAAP,EAAWT,QAAX,KAAwB;AACnD,QAAMG,QAAQ,GAAG,MAAML,eAAe,CAACM,GAAhB,CAAqB,UAASK,EAAG,EAAjC,CAAvB;AAEAT,EAAAA,QAAQ,CAAC;AAAEK,IAAAA,IAAI,EAAE,iBAAR;AAA2BC,IAAAA,OAAO,EAAEH,QAAQ,CAACI;AAA7C,GAAD,CAAR;AACD,CAJkB,CAAnB","sourcesContent":["import _ from 'lodash';\n\nimport jsonPlaceholder from '../apis/jsonPlaceholder';\n\nexport const fetchPostsAndUsers = () => {\n  return async (dispatch) => {\n    await dispatch(fetchPosts());\n  }\n}\n\nexport const fetchPosts = () => {\n  return async function(dispatch, getState) {\n    const response = await jsonPlaceholder.get('/posts');\n\n    dispatch({\n      type: 'FETCH_POSTS',\n      payload: response.data\n    });\n  };\n};\n\n\n/*\nalternative ES6 syntax for the above\n\nexport const fetchPosts = () => async dispatch => {\n  const response = await jsonPlaceholder.get('/posts');\n\n  dispatch({ type: 'FETCH_POSTS', payload: response})\n};\n\n*/\n\n// export const fetchUser = (userId) => {\n//   return async function(dispatch) {\n//     const response = await jsonPlaceholder.get(`/users/${userId}`)\n\n//     dispatch({\n//       type: 'FETCH_POST_USER',\n//       payload: response.data\n//     });\n//   }\n// }\n\n//memoized version\n//id => dispatch => means we have a function/id that calls\n//another function/dispatch, that returns _fetchUser\n// export const fetchUser = id => dispatch => {\n//   _fetchUser(id, dispatch);\n// }\n\n\nexport const fetchUser = (id, dispatch) => {\n  return (dispatch) => {\n     _fetchUser(id, dispatch); \n  }\n}\n\nconst _fetchUser = _.memoize(async (id, dispatch) => {\n  const response = await jsonPlaceholder.get(`/users/${id}`);\n\n  dispatch({ type: 'FETCH_POST_USER', payload: response.data })\n})"]},"metadata":{},"sourceType":"module"}