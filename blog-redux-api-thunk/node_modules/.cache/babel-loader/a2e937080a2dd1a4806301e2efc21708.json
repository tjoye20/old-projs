{"ast":null,"code":"var _jsxFileName = \"/Users/toluoyeniyi/Desktop/react-js/blog-redux-api-thunk/src/components/UserHeader.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchUser } from '../actions'; //we import this, to pass it to Redux and assign it to a \n//prop that we can use.\n\nclass UserHeader extends React.Component {\n  componentDidMount() {\n    this.props.fetchUser(this.props.userId);\n  }\n\n  renderUser() {\n    const user = this.props.users.finid(this.props.userId);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"item\",\n      key: user.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }\n    }, user.name)));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ui relaxed divided list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 12\n      }\n    }, this.renderUser());\n  }\n\n}\n\n;\n\nconst mapStateToProps = state => {\n  return {\n    users: state.users //value stored in our reducer\n\n  };\n};\n\nexport default connect(mapStateToProps, {\n  //we save that api call into a prop so we \n  //can call it in our componentDidMount\n  fetchUser: fetchUser\n})(UserHeader);","map":{"version":3,"sources":["/Users/toluoyeniyi/Desktop/react-js/blog-redux-api-thunk/src/components/UserHeader.js"],"names":["React","connect","fetchUser","UserHeader","Component","componentDidMount","props","userId","renderUser","user","users","finid","id","name","render","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,YAA1B,C,CACA;AACA;;AAEA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AACvCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWJ,SAAX,CAAqB,KAAKI,KAAL,CAAWC,MAAhC;AACD;;AAEDC,EAAAA,UAAU,GAAG;AACX,UAAMC,IAAI,GAAG,KAAKH,KAAL,CAAWI,KAAX,CAAiBC,KAAjB,CAAuB,KAAKL,KAAL,CAAWC,MAAlC,CAAb;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAsB,MAAA,GAAG,EAAEE,IAAI,CAACG,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKH,IAAI,CAACI,IAAV,CADF,CADF,CADF;AAOD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBAAO;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0C,KAAKN,UAAL,EAA1C,CAAP;AACD;;AAnBsC;;AAoBxC;;AAGD,MAAMO,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLN,IAAAA,KAAK,EAAEM,KAAK,CAACN,KADR,CACc;;AADd,GAAP;AAGD,CAJD;;AAMA,eAAeT,OAAO,CAACc,eAAD,EAAkB;AACtC;AACA;AACAb,EAAAA,SAAS,EAAEA;AAH2B,CAAlB,CAAP,CAIXC,UAJW,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchUser } from '../actions'\n//we import this, to pass it to Redux and assign it to a \n//prop that we can use.\n\nclass UserHeader extends React.Component {\n  componentDidMount() {\n    this.props.fetchUser(this.props.userId);\n  }\n\n  renderUser() {\n    const user = this.props.users.finid(this.props.userId);\n\n    return(\n      <div className='item' key={user.id}>\n        <div className='description'>\n          <h2>{user.name}</h2>\n        </div>\n      </div>\n    )\n  };\n\n  render() {\n    return <div className='ui relaxed divided list'>{this.renderUser()}</div>;\n  }\n};\n\n\nconst mapStateToProps = (state) => {\n  return {\n    users: state.users //value stored in our reducer\n  };\n}\n\nexport default connect(mapStateToProps, { \n  //we save that api call into a prop so we \n  //can call it in our componentDidMount\n  fetchUser: fetchUser \n} )(UserHeader);"]},"metadata":{},"sourceType":"module"}